services:
  frontend-prod:
    build:
      context: frontend
      dockerfile: Dockerfile-prod
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    networks:
      - app-network
    restart: always
    stdin_open: true
    depends_on:
      - backend-prod
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    profiles: ["secure"]
  
  frontend-dev:
    build:
      context: frontend
      dockerfile: Dockerfile-dev
    ports:
      - 8080:80
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
    restart: always
    stdin_open: true
    depends_on:
      - backend-dev
    profiles: ["dev"]
  
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    profiles: ["secure"]

  backend-prod:
    build:
      context: backend
    ports:
      - 3333:3333
      - 3001:9229
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
      - ./data/certbot/conf:/etc/letsencrypt
    networks:
      - app-network
      - data-network
    restart: unless-stopped
    depends_on:
      - database
    profiles: ["secure"]

  backend-dev:
    build:
      context: backend
    ports:
      - 3333:3333
      - 3001:9229
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network
      - data-network
    restart: unless-stopped
    depends_on:
      - database
    profiles: ["dev"]

  database:
    ports:
      - 27017:27017
    volumes:
      - ./database/docker-data:/data/db
    restart: always
    image: mongo:4.4.8
    environment:
      MONGO_INITDB_ROOT_USERNAME_FILE: /run/secrets/db_root_user
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
    networks:
      - data-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
    secrets:
      - db_root_password
      - db_root_user
    profiles: ["secure","dev"]

secrets:
  db_root_password:
    file: db_root_password.txt
  db_root_user:
    file: db_root_user.txt

networks:
  app-network:
  data-network:
